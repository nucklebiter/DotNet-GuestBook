// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyPortfolioWeb.DataAccess;

#nullable disable

namespace MyPortfolio.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220607003658_RemoveDisplayOrderFromGuestType")]
    partial class RemoveDisplayOrderFromGuestType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyPortfolio.Models.AlienType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AlienTypeCreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("AlienTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AlienTypes");
                });

            modelBuilder.Entity("MyPortfolio.Models.GuestBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AlienTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GuestBookCreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GuestBookDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestBookEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestBookFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestBookLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GuestTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlienTypeId");

                    b.HasIndex("GuestTypeId");

                    b.ToTable("GuestBooks");
                });

            modelBuilder.Entity("MyPortfolio.Models.GuestType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("GuestTypeCreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GuestTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GuestTypes");
                });

            modelBuilder.Entity("MyPortfolio.Models.GuestBook", b =>
                {
                    b.HasOne("MyPortfolio.Models.AlienType", "AlienType")
                        .WithMany()
                        .HasForeignKey("AlienTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyPortfolio.Models.GuestType", "GuestType")
                        .WithMany()
                        .HasForeignKey("GuestTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlienType");

                    b.Navigation("GuestType");
                });
#pragma warning restore 612, 618
        }
    }
}
